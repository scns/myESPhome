name: Build
# Build the ESPHome firmwares for the S0tool project.
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: Build firmware 🛠️
    uses: esphome/workflows/.github/workflows/build.yml@main
    with:
      files: |
        esphome/luxmeter.yaml
        esphome/vindriktning.yaml
        esphome/bluetoothproxy.yaml
        esphome/garagedoor.yaml
        esphome/ds18b20.yaml
        esphome/ds18b20_beta.yaml
        
      esphome-version: 2024.10.0
      release-url: "https://github.com/scns/myESPhome/releases"
      release-summary: "** Check the release notes for more information. **"
      #release-summary: ${{ github.event_name == 'release' && github.event.release.body || '' }}
      #release-url: ${{ github.event_name == 'release' && github.event.release.html_url || '' }}
      #release-version: ${{ github.event_name == 'release' && github.event.release.tag_name || '' }}
      
  consolidate:
    name: Consolidate firmwares 🚀
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.2.2
      - name: Download built firmwares
        uses: actions/download-artifact@v4.1.8
        with:
          path: firmwares
      - name: Remove intermediate version folder
        run: |-
          for d in firmwares/*/*; do
            if [ -d "$d" ]; then
              mv $d/* $d/../
              rm -rf $d
            fi
          done
      - name: Copy files
        run: |-
          mkdir output
          cp -R static/* output/
          cp -R firmwares/* output/
      - name: Copy manifest files to root and modify paths # This is required so that older firmwares can update to newer firmwares with new manifest paths
        run: |-
          for device in firmwares/*; do
            device=$(basename $device)
            jq --arg device "$device" \
                '.builds[].ota.path |= $device + "/" + . | (.builds[].parts // [])[].path |= $device + "/" + .' \
                firmwares/$device/manifest.json > output/$device-manifest.json
          done
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: output

  deploy:
    if: github.event_name == 'release'
    name: Deploy to GitHub Pages 🚀
    runs-on: ubuntu-latest
    needs: consolidate
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
              
  comment:
    if: github.event_name == 'pull_request'
    name: Comment on PR
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7.0.1
        with:
          script: |-
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            })
            const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifacts['data']['artifacts'][0]['id']}`
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Firmware built successfully! :tada:

            [Download][download] and extract the firmware to install with https://web.esphome.io

            Make sure to choose \`home-assistant-voice-esp32s3.factory.bin\`.

            [download]: ${url}`
            })